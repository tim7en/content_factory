version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/ai_content_factory
      - REDIS_URL=redis://redis:6379
      - PORT=3000
    env_file:
      - .env
    volumes:
      - ./generated_content:/app/generated_content
      - ./logs:/app/logs
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    networks:
      - content-factory-network

  mongo:
    image: mongo:7
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: ai_content_factory
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - content-factory-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - content-factory-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./generated_content:/usr/share/nginx/html/content:ro
    depends_on:
      - app
    networks:
      - content-factory-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/ai_content_factory
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - ./generated_content:/app/generated_content
      - ./logs:/app/logs
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    deploy:
      replicas: 3
    networks:
      - content-factory-network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/ai_content_factory
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - ./generated_content:/app/generated_content
      - ./logs:/app/logs
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    networks:
      - content-factory-network

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - content-factory-network

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - content-factory-network

networks:
  content-factory-network:
    driver: bridge

volumes:
  mongo_data:
  redis_data:
  prometheus_data:
  grafana_data: